SCIP version 0.75
=================
- started change log


SCIP version 0.76
=================

interface:
- new method SCIPchgVarBranchDirection()
- new method SCIPvarGetBranchDirection()
- new possible result code SCIP_DELAYED for primal heuristics
- changed SCIPcatchVarEvent() and SCIPdropVarEvent()
- method SCIPstage() is now called SCIPgetStage()
- method SCIPprintStatus() is now called SCIPprintStage()
- new method SCIPgetStatus() returns the solution status
- new method SCIPprintStatus() outputs the solution status
  (beware, that the old SCIPprintStatus() method is now called SCIPprintStage())

plugins:
- new method SCIPgetActivityLinear() in linear constraint handler
- new method SCIPgetFeasibilityLinear() in linear constraint handler

parameters:
- new parameter separating/efficacynorm to choose between euclidean, maximum, sum, and discrete norm
  in efficacy calculation
- changed default frequency offset of pscostdiving (heuristics/pscostdiving/freqofs) to 2,
  and frequency offset of fracdiving (heuristics/feaspump/freqofs) to 0 in order to not call pscostdiving
  in root node, where nearly all pseudo costs are uninitialized

features:
- creation of reconvergence clauses in conflict analysis
- first node of each plunging is not treated as plunging node w.r.t. calling primal heuristics
- improved performance of logic or constraint handler due to better watched variables handling

fixed bugs:
- removed bugs in CLP Solver interface
- SCIP returned "gap limit reached" even if the problem was solved to optimality, if the
  optimal solution was found at a node with lower bound equal to the global lower bound
- after conversion of the focus node into a junction (e.g. in case of numerical troubles while solving the node's LP),
  the child nodes got the wrong LP fork attached (the common LP fork of the old and new focus node instead of the
  old focus node's LP fork)
- bug reconvergence clauses in conflict analysis if bounds on non-binary variables were the reason for the fixing of
  the uip to create a reconvergence clause for
- wrong subcalls in SCIPvarGet...CurrentRun() for aggregated variables
- variables' conflict set counter was not reset when the problem was resolved again

known bugs (still not fixed):
- unbounded models lead to an error
- air04 and air05 return wrong optimal value (1 too large): possibly due to strong branching or setppc propagation?


SCIP version 0.77
=================

installation:
- the file names in the archive file are now preceeded with a directory "scip-<version>/"
- the compiler is now also represented in the LP solver library names
  (e.g. you have to rename the softlink "libcplex.linux.x86.a" to "libcplex.linux.x86.gnu.a")

interface:
- added methods SCIPgetVarsLogicor() and SCIPgetNVarsLogicor() in logic or constraint handler
- methode SCIPgetGap() and SCIPgetTransGap() now return infinity, if primal and dual bound have opposite sign
  (this removes the oddness with the gap increasing while the dual bound approaches zero)

parameters:
- lp/colagelimit and lp/rowagelimit may now be set to -1 to disable deletion of columns/rows due to aging

features:
- infeasible LPs in diving now produce conflict clauses (if LP conflict analysis is enabled)
- conflict analysis was slightly modified
- slightly changed aging strategy of logic or constraint handler

fixed bugs:
- removed bug in conflict analysis that appears if the conflict is only active at the current depth level
- missing SCIPlpiIsPrimalFeasible() and SCIPlpiIsDualFeasible() implemented in lpi_spx.cpp and lpi_spx121.cpp
- removed preprocessing of linear constraint pairs with modifiable constraints
- removed wrong assert "assert(eventfilter->len == 0 || eventfilter->eventmask != 0x00000000)" from event.c
- removed wrong assert in conflict analysis (appeared on analysing diving LP conflicts with both bounds of a non-binary
  variable changed)
