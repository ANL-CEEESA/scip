// $Id: scip.lnt,v 1.1 2002/10/23 14:31:37 bzfpfend Exp $
-passes(1)
// esoteric size settings to find erros.
//-si4    // int's are 4 bytes
//-sl6    // long's are 6 bytes
//-sp8    // ptr's are 8 bytes

-fdc       // do not Distinguish plain Char as a unique type.
           // i.e. char is either signed char or unsigned char
           
            // while processing library headers
-wlib(1)    // sets the warning level within library headers to 1
            // (no warnings, just syntax errors).  Comment out if you
            // are actually linting library headers.  This
            // option makes obsolete options of the form -elib(axxx) where
            // xxx >= 400 which may be retained for historical reasons.

-i./lint/posix
-i./lint/cpp
-i/usr/include

+libh(cplex.h)
+libh(lp.h)


//  The following functions exhibit variable return modes.
//  That is, they may equally-usefully be called for a value
//  as called just for their effects.  Accordingly we inhibit
//  Warning 534 for these functions.
//  Feel free to add to or subtract from this list.

-esym(534,close,creat,fclose,fprintf,fputc)
-esym(534,fputs,fscanf,fseek,fwrite,lseek,memcpy,memmove,memset)
-esym(534,printf,puts,scanf,sprintf,sscanf,strcat,strcpy)
-esym(534,strncat,strncpy,unlink,write)

-function(exit,__assertfail)

-e506  // Constant value Boolean
-e534  // Ignoring return value of function
-e537  // Repeated include file
-e737  // Loss of sign in promotion from int to unsigned int
-e713  // loss of precision
-e788  // enum constant not used within defaulted switch
-e801  // keine Warnungen wegen goto
-e834  // Operator followed by operator ist confusing -- unsinn
-e793  // ANSI limit of 31 'function parameters' exceeded

// examined warnings, which are okay
-esym(530,testedDeltas)                         // mir.c
-esym(526,rand_r)                            	// misc.c
-esym(628,rand_r)                            	// misc.c
-esym(718,rand_r)                            	// misc.c
-esym(746,rand_r)                            	// misc.c
-esym(714,randInt)                           	// misc.c
-esym(714,resetRandSeed)			// misc.c
-esym(526,ftruncate)                         	// filehd.c
-esym(628,ftruncate)                         	// filehd.c
-esym(718,ftruncate)                         	// filehd.c
-esym(746,ftruncate)                         	// filehd.c
-esym(768,Augm::align)                       	// str.h
-esym(714,SIPgetBranchingHistory)            	// branchinghistory.c
-esym(714,SIPgetBranchingHistory_globalSize) 	// branchinghistory.c
-esym(714,SIPsetScorefactor)			// branchingstatistic.c
-esym(714,SIPsetDynamicScorefraction)		// branchingstatistic.c
-esym(714,SIPisPrec)                         	// aux.c
-esym(714,SIPcall)                           	// call.c
-esym(714,SIPclone)                          	// clone.c
-esym(714,SIPsepprec)				// prec.c
-esym(714,SIPwelcome)				// dialog.c
-esym(714,SIPcallbackEnterNode)                 // set.c
-esym(714,SIPcallbackEnterProb)                 // set.c
-esym(714,SIPcallbackLeaveProb)                 // set.c
-esym(714,SIPcallbackLeaveNode)                 // set.c
-esym(714,SIPcallbackFoundPrimal)               // set.c
-esym(714,SIPcallbackFreeUsrdata)               // set.c
-esym(714,SIPdeactivateSepar)                   // separate.c
-esym(714,SIPhasSepar)                          // separate.c
-esym(714,SIPaddCut)                            // separate.c
-esym(714,SIPgetHeurChar)                       // heurist.c
-esym(714,memorySize)                           // memory.c
-esym(715,signum)				// irpt.c
-esym(755,SIP*Heur*Name)                        // heuristic.h
-esym(755,SIP*Separ*Name)                       // separate.h
-esym(755,freeBlockMemoryNull)                  // memory.h
-esym(755,allocMemoryCPP)                       // memory.h
-esym(755,allocMemoryArrayCPP)                  // memory.h
-esym(769,UsrSetting::SIP_UNDEFINED)            // struct.h
-efunc(826,blk_new)				// blkac.c
-efunc(826,allocaugm)				// tset.c
-esym(526,SIPdialog)				// cmain.c
-esym(528,findBlock)                            // memory.c

// temporary
-e818  // Pointer parameter could be declared as pointing to const
//-e715  // Symbol not referenced
-e777  // Testing floats for equality
-e759  // header declaration for symbol could be moved from header to module
-e765  // external could be made static
-e1065 // Symbol ... not declared as "C" conflicts with ...


-esym(666,ABS) // Expression with side effects passed to repeated parameter
-esym(526,gettimeofday)    	// time.c
-esym(628,gettimeofday)    	// time.c
-esym(718,gettimeofday)    	// time.c
-esym(746,gettimeofday)    	// time.c
-esym(565,timeval)         	// time.c
-esym( 86,tp)              	// time.c
-esym( 40,tv_usec)         	// time.c
-esym( 40,tv_sec)          	// time.c
-efile(766,sys/time.h)     	// time.c
-esym( 40,ostream)         	// fstream
-esym(1702,operator<<)
-esym(1748,SPxSIP)		// spx_lp.cpp

-esym(715,set)                  // symbol not refererenced
