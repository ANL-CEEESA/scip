// $Id: scip.lnt,v 1.2 2003/03/10 14:09:07 bzfpfend Exp $
-passes(1)
// esoteric size settings to find erros.
//-si4    // int's are 4 bytes
//-sl6    // long's are 6 bytes
//-sp8    // ptr's are 8 bytes

-fdc       // do not Distinguish plain Char as a unique type.
           // i.e. char is either signed char or unsigned char
           
            // while processing library headers
-wlib(1)    // sets the warning level within library headers to 1
            // (no warnings, just syntax errors).  Comment out if you
            // are actually linting library headers.  This
            // option makes obsolete options of the form -elib(axxx) where
            // xxx >= 400 which may be retained for historical reasons.

-i./lint/posix
-i./lint/cpp
-i/usr/include

+libh(cplex.h)
+fll


//  The following functions exhibit variable return modes.
//  That is, they may equally-usefully be called for a value
//  as called just for their effects.  Accordingly we inhibit
//  Warning 534 for these functions.
//  Feel free to add to or subtract from this list.

-esym(534,close,creat,fclose,fprintf,fputc)
-esym(534,fputs,fscanf,fseek,fwrite,lseek,memcpy,memmove,memset)
-esym(534,printf,puts,scanf,sprintf,sscanf,strcat,strcpy)
-esym(534,strncat,strncpy,unlink,write)

-function(exit,__assertfail)

//-e534  // Ignoring return value of function
-e537  // Repeated include file
//-e713  // loss of precision
-e737  // Loss of sign in promotion from int to unsigned int
-e773  // Expression-like macro not parenthesized
//-e788  // enum constant not used within defaulted switch
-e793  // ANSI limit of 31 'function parameters' exceeded / ANSI limit of 8 '#include levels' exceeded
//-e801  // keine Warnungen wegen goto
//-e834  // Operator followed by operator ist confusing -- unsinn

// examined warnings, which are okay
//-esym(530,testedDeltas)                         // mir.c

// temporary
-e506  // Constant value Boolean
-e774  // Boolean within 'if' always evaluates to False


//-e818  // Pointer parameter could be declared as pointing to const
//-e715  // Symbol not referenced
//-e777  // Testing floats for equality
//-e759  // header declaration for symbol could be moved from header to module
//-e765  // external could be made static
//-e1065 // Symbol ... not declared as "C" conflicts with ...


//-esym(666,ABS) // Expression with side effects passed to repeated parameter
-esym(506,debugMessage)
