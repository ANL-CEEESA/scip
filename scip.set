# verbosity level of output [default: 2]
global/display/verblevel = 4

# maximal number of characters in a node information line [default: 138]
global/display/dispwidth = 138

# frequency for displaying node information lines [default: 1000]
global/display/dispfreq = 1000

# frequency for displaying header lines (every n'th node information line) [default: 15]
global/display/dispheaderfreq = 15

# values larger than this are considered infinity [default: 1.000000000000000e+20]
global/numerics/infinity = 1.000000000000000e+20

# absolute values smaller than this are considered zero [default: 1.000000000000000e-09]
global/numerics/epsilon = 1.000000000000000e-09

# absolute values of sums smaller than this are considered zero [default: 1.000000000000000e-06]
global/numerics/sumepsilon = 1.000000000000000e-06

# LP feasibility tolerance [default: 1.000000000000000e-06]
global/numerics/feastol = 1.000000000000000e-06

# epsilon for deciding if a cut is violated [default: 1.000000000000000e-03]
global/numerics/cutvioleps = 1.000000000000000e-03

# memory growing factor for dynamically allocated arrays [default: 1.200000000000000e+00]
global/memory/memgrowfac = 1.200000000000000e+00

# initial size of dynamically allocated arrays [default: 4]
global/memory/memgrowinit = 4

# memory growing factor for tree array [default: 2.000000000000000e+00]
global/memory/treegrowfac = 2.000000000000000e+00

# initial size of tree array [default: 65536]
global/memory/treegrowinit = 65536

# memory growing factor for path array [default: 2.000000000000000e+00]
global/memory/pathgrowfac = 2.000000000000000e+00

# initial size of path array [default: 256]
global/memory/pathgrowinit = 256

# branching score factor to weigh downward and upward gain prediction [default: 1.670000000000000e-01]
global/branching/branchscorefac = 1.670000000000000e-01

# maximal number of presolving rounds (-1: unlimited) [default: -1]
global/presolving/maxpresolrounds = -1

# abort presolve, if less than this fraction of the problem was changed in last presolve round [default: 1.000000000000000e-04]
global/presolving/presolabortfac = 1.000000000000000e-04

# maximal number of variables priced in per pricing round [default: 128]
global/pricing/maxpricevars = 128

# maximal number of priced variables at the root node [default: 2048]
global/pricing/maxpricevarsroot = 2048

# pricing is aborted, if fac * maxpricevars pricing candidates were found [default: 2.000000000000000e+00]
global/pricing/abortpricevarsfac = 2.000000000000000e+00

# maximal number of cuts separated per separation round [default: 128]
global/separating/maxsepacuts = 128

# maximal number of separated cuts at the root node [default: 2048]
global/separating/maxsepacutsroot = 2048

# maximum age a cut can reach before it is deleted from the global cut pool [default: 128]
global/separating/cutagelimit = 128

# maximum age an unnecessary constraint can reach before it is deleted [default: 128]
global/constraints/consagelimit = 128

# maximal number of solutions to store in the solution storage [default: 256]
global/solutions/maxsol = 256

# maximal number of nodes to process (-1: no limit) [default: -1]
global/limits/nodelimit = -1

# maximal time in seconds to run [default: 1.000000000000000e+20]
global/limits/timelimit = 1.000000000000000e+20

# frequency for solving LP at the nodes (-1: never; 0: only root LP) [default: 4]
global/lp/lpsolvefreq = 4

# maximal depth for solving LP at the nodes (-1: no depth limit) [default: -1]
global/lp/lpsolvedepth = -1

# should new non-basic columns be removed after LP solving? [default: FALSE]
global/lp/cleanupcols = FALSE

# should new basic rows be removed after LP solving? [default: TRUE]
global/lp/cleanuprows = TRUE

# maximum age a column can reach before it is deleted from the LP [default: 8]
global/lp/colagelimit = 8

# maximum age a row can reach before it is deleted from the LP [default: 8]
global/lp/rowagelimit = 8

# default clock type (1: CPU user seconds, 2: wall clock time) [default: 1]
global/timing/clocktype = 1

# is timing enabled? [default: TRUE]
global/timing/clocksenabled = TRUE

# should the CTRL-C interrupt be catched by SCIP? [default: TRUE]
global/catchctrlc = TRUE

# should variables be added and removed dynamically to the problem? [default: TRUE]
reader/mps/dynamicvars = TRUE

# should constraints be added and removed dynamically to the problem? [default: TRUE]
reader/mps/dynamicconss = TRUE

# display activation status of display column (0: off, 1: auto, 2:on) [default: 1]
display/solfound/active = 1

# display activation status of display column (0: off, 1: auto, 2:on) [default: 1]
display/time/active = 1

# display activation status of display column (0: off, 1: auto, 2:on) [default: 1]
display/nodenum/active = 1

# display activation status of display column (0: off, 1: auto, 2:on) [default: 1]
display/nodesleft/active = 1

# display activation status of display column (0: off, 1: auto, 2:on) [default: 1]
display/lpiterations/active = 1

# display activation status of display column (0: off, 1: auto, 2:on) [default: 1]
display/memused/active = 1

# display activation status of display column (0: off, 1: auto, 2:on) [default: 1]
display/actdepth/active = 1

# display activation status of display column (0: off, 1: auto, 2:on) [default: 1]
display/maxdepth/active = 1

# display activation status of display column (0: off, 1: auto, 2:on) [default: 1]
display/actvars/active = 1

# display activation status of display column (0: off, 1: auto, 2:on) [default: 1]
display/actconss/active = 1

# display activation status of display column (0: off, 1: auto, 2:on) [default: 1]
display/actcols/active = 1

# display activation status of display column (0: off, 1: auto, 2:on) [default: 1]
display/actrows/active = 1

# display activation status of display column (0: off, 1: auto, 2:on) [default: 1]
display/cuts/active = 1

# display activation status of display column (0: off, 1: auto, 2:on) [default: 1]
display/separounds/active = 1

# display activation status of display column (0: off, 1: auto, 2:on) [default: 1]
display/poolsize/active = 1

# display activation status of display column (0: off, 1: auto, 2:on) [default: 1]
display/actdualbound/active = 1

# display activation status of display column (0: off, 1: auto, 2:on) [default: 1]
display/avgdualbound/active = 1

# display activation status of display column (0: off, 1: auto, 2:on) [default: 1]
display/dualbound/active = 1

# display activation status of display column (0: off, 1: auto, 2:on) [default: 1]
display/primalbound/active = 1

# display activation status of display column (0: off, 1: auto, 2:on) [default: 1]
display/gap/active = 1

# frequency for separating cuts (-1: never, 0: only in root node) [default: -1]
conshdlr/integral/sepafreq = -1

# frequency for propagating domains (-1: never, 0: only in root node) [default: -1]
conshdlr/integral/propfreq = -1

# frequency for separating cuts (-1: never, 0: only in root node) [default: 4]
conshdlr/linear/sepafreq = 4

# frequency for propagating domains (-1: never, 0: only in root node) [default: 4]
conshdlr/linear/propfreq = 4

# multiplier on propagation frequency, how often the bounds are tightened (-1: never, 0: only at root) [default: 5]
conshdlr/linear/tightenboundsfreq = 5

# frequency for separating cuts (-1: never, 0: only in root node) [default: 4]
conshdlr/setcover/sepafreq = 4

# frequency for propagating domains (-1: never, 0: only in root node) [default: -1]
conshdlr/setcover/propfreq = -1

# number of children created in pseudo branching [default: 2]
conshdlr/setcover/npseudobranches = 2

# frequency for separating cuts (-1: never, 0: only in root node) [default: 4]
conshdlr/setpack/sepafreq = 4

# frequency for propagating domains (-1: never, 0: only in root node) [default: -1]
conshdlr/setpack/propfreq = -1

# number of children created in pseudo branching [default: 2]
conshdlr/setpack/npseudobranches = 2

# frequency for separating cuts (-1: never, 0: only in root node) [default: 4]
conshdlr/setpart/sepafreq = 4

# frequency for propagating domains (-1: never, 0: only in root node) [default: -1]
conshdlr/setpart/propfreq = -1

# number of children created in pseudo branching [default: 2]
conshdlr/setpart/npseudobranches = 2

# frequency for calling primal heuristic (-1: never, 0: only in root node) [default: 10]
heuristic/diving/freq = 10

# frequency for calling primal heuristic (-1: never, 0: only in root node) [default: 1]
heuristic/rounding/freq = 1

# frequency for calling separator (-1: never, 0: only in root node) [default: 8]
separator/gomory/freq = 8

