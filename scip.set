# verbosity level of output [default: 2]
global_VerbLevel = 2

# values larger than this are considered infinity [default: 1.000000000000000e+20]
global_Infinity = 1.000000000000000e+20

# absolute values smaller than this are considered zero [default: 1.000000000000000e-09]
global_Epsilon = 1.000000000000000e-09

# absolute values of sums smaller than this are considered zero [default: 1.000000000000000e-06]
global_SumEpsilon = 1.000000000000000e-06

# LP feasibility tolerance [default: 1.000000000000000e-06]
global_Feastol = 1.000000000000000e-06

# epsilon for deciding if a cut is violated [default: 1.000000000000000e-03]
global_CutViolEps = 1.000000000000000e-03

# memory growing factor for dynamically allocated arrays [default: 1.200000000000000e+00]
global_MemGrowFac = 1.200000000000000e+00

# initial size of dynamically allocated arrays [default: 4]
global_MemGrowInit = 4

# memory growing factor for tree array [default: 2.000000000000000e+00]
global_TreeGrowFac = 2.000000000000000e+00

# initial size of tree array [default: 65536]
global_TreeGrowInit = 65536

# memory growing factor for path array [default: 2.000000000000000e+00]
global_PathGrowFac = 2.000000000000000e+00

# initial size of path array [default: 256]
global_PathGrowInit = 256

# branching score factor to weigh downward and upward gain prediction [default: 1.670000000000000e-01]
global_BranchScoreFac = 1.670000000000000e-01

# maximal number of characters in a node information line [default: 138]
global_DispWidth = 138

# frequency for displaying node information lines [default: 1000]
global_DispFreq = 1000

# frequency for displaying header lines (every n'th node information line) [default: 15]
global_DispHeaderFreq = 15

# maximal number of presolving rounds (-1: unlimited) [default: -1]
global_MaxPresolRounds = -1

# abort presolve, if less than this fraction of the problem was changed in last presolve round [default: 1.000000000000000e-04]
global_PresolAbortFac = 1.000000000000000e-04

# maximal number of variables priced in per pricing round [default: 128]
global_MaxPriceVars = 128

# maximal number of priced variables at the root node [default: 2048]
global_MaxPriceVarsRoot = 2048

# pricing is aborted, if fac * maxpricevars pricing candidates were found [default: 2.000000000000000e+00]
global_AbortPriceVarsFac = 2.000000000000000e+00

# maximal number of cuts separated per separation round [default: 128]
global_MaxSepaCuts = 128

# maximal number of separated cuts at the root node [default: 2048]
global_MaxSepaCutsRoot = 2048

# maximum age a column can reach before it is deleted from the LP [default: 8]
global_ColAgeLimit = 8

# maximum age a row can reach before it is deleted from the LP [default: 8]
global_RowAgeLimit = 8

# maximum age a cut can reach before it is deleted from the global cut pool [default: 128]
global_CutAgeLimit = 128

# maximum age an unnecessary constraint can reach before it is deleted [default: 128]
global_ConsAgeLimit = 128

# maximal number of solutions to store in the solution storage [default: 256]
global_MaxSol = 256

# maximal number of nodes to process (-1: no limit) [default: -1]
global_NodeLimit = -1

# frequency for solving LP at the nodes (-1: never; 0: only root LP) [default: 4]
global_LpSolveFreq = 4

# maximal depth for solving LP at the nodes (-1: no depth limit) [default: -1]
global_LpSolveDepth = -1

# should new non-basic columns be removed after LP solving? [default: FALSE]
global_CleanupCols = FALSE

# should new basic rows be removed after LP solving? [default: TRUE]
global_CleanupRows = TRUE

# should variables be added and removed dynamically to the problem? [default: TRUE]
reader_MPS_DynamicVars = TRUE

# should constraints be added and removed dynamically to the problem? [default: TRUE]
reader_MPS_DynamicConss = TRUE

# multiplier on propagation frequency, how often the bounds are tightened (-1: never, 0: only at root) [default: 5]
conshdlr_linear_TightenBoundsFreq = 5

# number of children created in pseudo branching [default: 2]
conshdlr_setcover_npseudobranches = 2

# number of children created in pseudo branching [default: 2]
conshdlr_setpack_npseudobranches = 2

# number of children created in pseudo branching [default: 2]
conshdlr_setpart_npseudobranches = 2

